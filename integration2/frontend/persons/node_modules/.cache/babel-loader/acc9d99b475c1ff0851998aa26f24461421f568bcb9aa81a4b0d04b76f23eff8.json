{"ast":null,"code":"var _jsxFileName = \"/home/applines-16/Documents/GitHub/new-task/integration2/frontend/persons/src/components/Barchart.js\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from 'react-chartjs-2';\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Barchart = () => {\n  _s();\n  ChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\n  const l = [];\n  const [graph, setgraph] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/pro/person/\").then(res => {\n      setgraph(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  {\n    graph.map(item => {\n      l.push(item.id);\n    });\n  }\n  const da = {\n    labels: ['jan', 'feb', 'march', 'april', 'may', 'june', 'july'],\n    datasets: [{\n      label: 'Dataset1',\n      data: l,\n      backgroundColor: 'aqua',\n      borderColor: 'black',\n      borderWidth: 1\n    }\n    // },\n    // {\n    //     label:'Dataset2',\n    //     data:[3,20,9,12,5,6,20],\n    //     backgroundColor:'pink',\n    //     borderColor:'black',\n    //     borderWidth:1, \n    //     },\n    ]\n  };\n\n  const options = {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: da,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Barchart, \"5eRjj6MBMuO8tPuRFYU9hYY0gZs=\");\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Bar","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Barchart","_s","register","l","graph","setgraph","get","then","res","data","catch","err","console","log","map","item","push","id","da","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/applines-16/Documents/GitHub/new-task/integration2/frontend/persons/src/components/Barchart.js"],"sourcesContent":["import {Chart as ChartJS,BarElement,CategoryScale,LinearScale,Tooltip,Legend} from \"chart.js\";\nimport { Bar } from 'react-chartjs-2';\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\n  const Barchart=()=> {\n    ChartJS.register(\n        BarElement,CategoryScale,LinearScale,Tooltip,Legend\n    )\n    const l=[]\n    const[graph,setgraph]=useState([])\n    useEffect(()=>{\n      axios.get(\"http://127.0.0.1:8000/pro/person/\").then(res=>{\n          setgraph(res.data)\n      }).catch(err=>console.log(err))\n      },[])\n      {graph.map((item)=>{\n        l.push(item.id)})}\n    const da={\n        labels:['jan','feb','march','april','may','june','july'],\n        datasets:[\n            {\n            label:'Dataset1',\n            data:l,\n            backgroundColor:'aqua',\n            borderColor:'black',\n            borderWidth:1,\n            }\n            // },\n            // {\n            //     label:'Dataset2',\n            //     data:[3,20,9,12,5,6,20],\n            //     backgroundColor:'pink',\n            //     borderColor:'black',\n            //     borderWidth:1, \n            //     },\n        ]\n    }\n    const options={\n\n    }\n   \n  return (\n    <div>\n        <div className=\"bar\">\n            <Bar data={da} options={options}></Bar>\n        </div>\n    </div>\n\n  )\n}\n   \nexport default Barchart;"],"mappings":";;AAAA,SAAQA,KAAK,IAAIC,OAAO,EAACC,UAAU,EAACC,aAAa,EAACC,WAAW,EAACC,OAAO,EAACC,MAAM,QAAO,UAAU;AAC7F,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAACA,CAAA,KAAK;EAAAC,EAAA;EAClBd,OAAO,CAACe,QAAQ,CACZd,UAAU,EAACC,aAAa,EAACC,WAAW,EAACC,OAAO,EAACC,MACjD,CAAC;EACD,MAAMW,CAAC,GAAC,EAAE;EACV,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAClCC,SAAS,CAAC,MAAI;IACZC,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAE;MACrDH,QAAQ,CAACG,GAAG,CAACC,IAAI,CAAC;IACtB,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAC/B,CAAC,EAAC,EAAE,CAAC;EACL;IAACP,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAG;MACjBZ,CAAC,CAACa,IAAI,CAACD,IAAI,CAACE,EAAE,CAAC;IAAA,CAAC,CAAC;EAAA;EACrB,MAAMC,EAAE,GAAC;IACLC,MAAM,EAAC,CAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,CAAC;IACxDC,QAAQ,EAAC,CACL;MACAC,KAAK,EAAC,UAAU;MAChBZ,IAAI,EAACN,CAAC;MACNmB,eAAe,EAAC,MAAM;MACtBC,WAAW,EAAC,OAAO;MACnBC,WAAW,EAAC;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;EAER,CAAC;;EACD,MAAMC,OAAO,GAAC,CAEd,CAAC;EAEH,oBACE1B,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAK4B,SAAS,EAAC,KAAK;MAAAD,QAAA,eAChB3B,OAAA,CAACN,GAAG;QAACgB,IAAI,EAAES,EAAG;QAACO,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGV,CAAC;AAAA9B,EAAA,CA7COD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA+ChB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}